"use client"

import React, { useState } from "react";
import Link from "next/link";
import { ChevronDown, Menu, Phone, X } from "lucide-react";
import { cn } from "@/lib/utils";
import { motion, AnimatePresence } from "framer-motion";
import { animations } from "./animated-components";

export function Navbar() {
  // Animation variants
  const mobileMenuVariants = {
    hidden: { opacity: 0, y: -10, height: 0 },
    visible: { 
      opacity: 1, 
      y: 0, 
      height: 'auto',
      transition: {
        duration: 0.3,
        staggerChildren: 0.1
      }
    },
    exit: { 
      opacity: 0, 
      y: -10, 
      height: 0,
      transition: { duration: 0.2 }
    }
  };
  
  const navItemVariants = {
    hidden: { opacity: 0, y: -5 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.3 }
    }
  };
  
  const logoVariants = {
    hidden: { opacity: 0, x: -10 },
    visible: { 
      opacity: 1, 
      x: 0,
      transition: { duration: 0.4, ease: "easeOut" }
    },
    hover: {
      scale: 1.05,
      transition: { duration: 0.2 }
    }
  };

  const [isMenuOpen, setIsMenuOpen] = useState(false);

  return (
    <motion.header 
      className="sticky top-0 z-50 bg-white shadow-sm"
      initial="hidden"
      animate="visible"
      variants={animations.fadeIn}
    >
      <motion.div 
        className="container mx-auto px-4 py-3 flex items-center justify-between"
        variants={animations.staggerContainer}
      >
        {/* Logo */}
        <motion.div
          variants={logoVariants}
          whileHover="hover"
        >
          <Link href="/" className="flex items-center">
            <div className="relative h-10 w-32">
              <div className="flex items-center">
                <div className="w-6 h-6 mr-2 rounded-full bg-green-500 flex items-center justify-center">
                  <svg viewBox="0 0 24 24" className="w-4 h-4 text-white">
                    <path
                      fill="currentColor"
                      d="M7,21C5.67,21 4.5,19.83 4.5,18.5C4.5,17.17 5.67,16 7,16C8.33,16 9.5,17.17 9.5,18.5C9.5,19.83 8.33,21 7,21M7,17.5C6.5,17.5 6,18 6,18.5C6,19 6.5,19.5 7,19.5C7.5,19.5 8,19 8,18.5C8,18 7.5,17.5 7,17.5M17,21C15.67,21 14.5,19.83 14.5,18.5C14.5,17.17 15.67,16 17,16C18.33,16 19.5,17.17 19.5,18.5C19.5,19.83 18.33,21 17,21M17,17.5C16.5,17.5 16,18 16,18.5C16,19 16.5,19.5 17,19.5C17.5,19.5 18,19 18,18.5C18,18 17.5,17.5 17,17.5M3,4H21V8H3V4M3,10H21V14H3V10Z"
                    />
                  </svg>
                </div>
                <span className="text-xl font-bold font-parkinsans">Clanyeco</span>
              </div>
            </div>
          </Link>
        </motion.div>

        {/* Desktop Navigation */}
        <motion.nav 
          className="hidden md:flex items-center space-x-1"
          variants={animations.staggerContainer}
        >
          <NavItem href="/" label="Home" />
          <NavItem
            href="/services"
            label="Services"
            hasDropdown
            dropdownItems={[
              { label: "House cleaning", href: "/services/house-cleaning" },
              { label: "Office cleaning", href: "/services/office-cleaning" },
              { label: "Deep cleaning", href: "/services/deep-cleaning" },
              { label: "Move in/out cleaning", href: "/services/move-in-out-cleaning" },
              { label: "Part orientation cleaning", href: "/services/part-orientation-cleaning" },
              { label: "Recurring cleaning", href: "/services/recurring-cleaning" },
            ]}
          />
          <NavItem href="/pricing" label="Pricing" />
          <NavItem href="/about" label="About us" hasDropdown={false} />
          <NavItem href="/contact" label="Contact" />
        </motion.nav>

        {/* Phone Number */}
        <motion.div 
          className="hidden md:flex items-center"
          variants={animations.fadeIn}
        >
          <motion.div
            whileHover={{ x: 2, transition: { duration: 0.2 } }}
          >
            <Link href="tel:+15551234567" className="flex items-center text-gray-700 mr-4 font-outfit">
              <Phone className="h-4 w-4 mr-2" />
              <span>+1 (555) 123-4567</span>
            </Link>
          </motion.div>
          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <Link
              href="/book"
              className="bg-yellow-400 hover:bg-yellow-500 text-black font-medium py-2 px-4 rounded-full transition-colors font-outfit"
            >
              Book a Cleaning
            </Link>
          </motion.div>
        </motion.div>

        {/* Mobile Menu Button */}
        <motion.button 
          className="md:hidden text-gray-700 p-2" 
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          whileTap={{ scale: 0.9 }}
          whileHover={{ scale: 1.1 }}
          aria-label="Toggle menu"
        >
          {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
        </motion.button>
      </motion.div>

      {/* Mobile Navigation */}
      <AnimatePresence>
        {isMenuOpen && (
          <motion.div
            className="md:hidden fixed top-[60px] left-0 w-full bg-white shadow-md overflow-hidden z-50 max-h-[calc(100vh-60px)] overflow-y-auto"
            initial="hidden"
            animate="visible"
            exit="exit"
            variants={mobileMenuVariants}
          >
            <motion.div 
              className="p-5 flex flex-col space-y-3"
              variants={animations.staggerContainer}
            >
              <motion.div variants={navItemVariants}>
                <Link href="/" className="py-3 border-b border-gray-100 font-outfit block text-base">
                  Home
                </Link>
              </motion.div>
              
              <motion.div variants={navItemVariants}>
                <Link href="/services" className="py-3 border-b border-gray-100 font-outfit block">
                  Services
                </Link>
                <motion.div 
                  className="ml-4 mt-2 mb-2 space-y-2"
                  variants={navItemVariants}
                >
                  {[
                    { label: "House cleaning", href: "/services/house-cleaning" },
                    { label: "Office cleaning", href: "/services/office-cleaning" },
                    { label: "Deep cleaning", href: "/services/deep-cleaning" },
                    { label: "Move in/out cleaning", href: "/services/move-in-out-cleaning" },
                    { label: "Post construction", href: "/services/post-construction" },
                    { label: "Recurring cleaning", href: "/services/recurring-cleaning" },
                  ].map((item) => (
                    <Link href={item.href} key={item.href} className="text-gray-600 font-outfit text-sm pl-2 block py-1 hover:text-green-600">
                      {item.label}
                    </Link>
                  ))}
                </motion.div>
              </motion.div>
              
              <motion.div variants={navItemVariants}>
                <Link href="/pricing" className="py-3 border-b border-gray-100 font-outfit block text-base">
                  Pricing
                </Link>
              </motion.div>
              
              <motion.div variants={navItemVariants}>
                <Link href="/about" className="py-3 border-b border-gray-100 font-outfit block text-base">
                  About us
                </Link>
              </motion.div>
              
              <motion.div variants={navItemVariants}>
                <Link href="/contact" className="py-3 border-b border-gray-100 font-outfit block text-base">
                  Contact
                </Link>
              </motion.div>

              <motion.div 
                className="flex flex-col space-y-4 pt-4 mt-2"
                variants={navItemVariants}
              >
                <motion.div whileHover={{ x: 3 }}>
                  <Link href="tel:+15551234567" className="flex items-center text-gray-700 font-outfit">
                    <Phone className="h-4 w-4 mr-2" />
                    <span>+1 (555) 123-4567</span>
                  </Link>
                </motion.div>
                
                <motion.div 
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Link
                    href="/book"
                    className="bg-yellow-400 hover:bg-yellow-500 text-black font-medium py-3 px-6 rounded-full text-center transition-colors font-outfit w-full sm:w-auto mt-2 flex items-center justify-center"
                  >
                    Book a Cleaning
                  </Link>
                </motion.div>
              </motion.div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.header>
  );
}

interface NavItemProps {
  href: string;
  label: string;
  hasDropdown?: boolean;
  dropdownItems?: { label: string; href: string }[];
}

function NavItem({ href, label, hasDropdown, dropdownItems }: NavItemProps) {
  // Animation variants
  const dropdownVariants = {
    hidden: { opacity: 0, y: -5, height: 0 },
    visible: { 
      opacity: 1, 
      y: 0, 
      height: 'auto',
      transition: {
        duration: 0.3,
        staggerChildren: 0.05
      }
    }
  };
  
  const dropdownItemVariants = {
    hidden: { opacity: 0, x: -10 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.2 } }
  };
  
  const [open, setOpen] = React.useState(false);
  
  return (
    <motion.div
      className="relative"
      onMouseEnter={() => setOpen(true)}
      onMouseLeave={() => setOpen(false)}
      variants={animations.fadeInUp}
      whileHover={{ y: -2 }}
    >
      <motion.div whileTap={{ scale: 0.97 }}>
        <Link
          href={href}
          className="relative px-3 py-2 text-gray-700 hover:text-green-600 font-medium flex items-center font-outfit"
        >
          {label}
          {hasDropdown && <ChevronDown className="ml-1 h-4 w-4" />}
        </Link>
      </motion.div>
      
      {hasDropdown && dropdownItems && (
        <AnimatePresence>
          {open && (
            <motion.div
              className="absolute left-0 mt-2 w-56 bg-white border border-gray-100 rounded-lg shadow-lg z-50"
              initial="hidden"
              animate="visible"
              exit="hidden"
              variants={dropdownVariants}
            >
              <motion.ul className="py-2">
                {dropdownItems.map((item) => (
                  <motion.li 
                    key={item.href}
                    variants={dropdownItemVariants}
                  >
                    <motion.div whileHover={{ x: 3 }}>
                      <Link
                        href={item.href}
                        className="block px-5 py-2 text-gray-700 hover:bg-green-50 hover:text-green-700 transition-colors font-outfit"
                      >
                        {item.label}
                      </Link>
                    </motion.div>
                  </motion.li>
                ))}
              </motion.ul>
            </motion.div>
          )}
        </AnimatePresence>
      )}
    </motion.div>
  );
}
